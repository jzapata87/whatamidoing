{"ast":null,"code":"var _jsxFileName = \"/Users/javierzapata/Developer/whatamidoing/src/User/User.js\";\nimport React from 'react';\nimport ChooseActivity from './ChooseActivity';\nimport ShowCurrentActivity from './ShowCurrentActivity';\nimport ShowSimilarUsers from './ShowSimilarUsers';\nimport { Socket } from 'phoenix-socket';\nimport { Presence } from '../phoenix.js';\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channel: null,\n      socket: null,\n      presenceState: {},\n      current: \"Nothing\"\n    }; // This binding is necessary to make `this` work in the callback\n\n    this.joinRoom = this.joinRoom.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n  }\n\n  sendMessage() {\n    const channel = this.state.channel;\n    channel.push('shout', {\n      name: this.props.usernumber + \" is \" + this.state.current\n    });\n  }\n\n  joinRoom(data) {\n    const socket = this.state.socket;\n    this.setState({\n      data\n    });\n    this.setState({\n      current: data\n    });\n    const channel = socket.channel(\"water_cooler:\".concat(data));\n    this.setState({\n      channel: channel\n    });\n    socket.connect();\n    channel.join().receive(\"ok\", resp => {\n      console.log(\"Joined successfully\" + this.props.usernumber, resp);\n    }).receive(\"error\", resp => {\n      console.log(\"Unable to join\", this.props.usernumber);\n    });\n    channel.on(\"room:\".concat(data, \":new_message\"), payload => {\n      if (payload.name !== this.props.usernumber + \" is \" + this.state.current) {\n        console.log(payload);\n        console.log(\"user \" + this.props.usernumber + \" got the message\");\n      }\n    });\n    channel.on('presence_state', presenceState => this.setState({\n      presenceState\n    })); //channel.push('users', {})\n  }\n\n  componentDidMount() {\n    const socket = new Socket(\"ws://127.0.0.1:4000/socket\", {\n      params: {\n        user_id: \"user #\".concat(this.props.usernumber)\n      }\n    });\n    this.setState({\n      socket\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"User\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(ShowCurrentActivity, {\n      current: this.state.current,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(ChooseActivity, {\n      join: this.joinRoom,\n      message: this.sendMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(ShowSimilarUsers, {\n      users: this.state.presenceState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default User;","map":{"version":3,"sources":["/Users/javierzapata/Developer/whatamidoing/src/User/User.js"],"names":["React","ChooseActivity","ShowCurrentActivity","ShowSimilarUsers","Socket","Presence","User","Component","constructor","props","state","channel","socket","presenceState","current","joinRoom","bind","sendMessage","push","name","usernumber","data","setState","connect","join","receive","resp","console","log","on","payload","componentDidMount","params","user_id","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ChooseActivity from './ChooseActivity';\nimport ShowCurrentActivity from './ShowCurrentActivity';\nimport ShowSimilarUsers from './ShowSimilarUsers';\nimport { Socket } from 'phoenix-socket';\nimport { Presence } from '../phoenix.js';\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channel: null,\n      socket: null,\n      presenceState:{},\n      current: \"Nothing\"\n    };\n\n    // This binding is necessary to make `this` work in the callback\n    this.joinRoom = this.joinRoom.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n  }\n\n  sendMessage() {\n    const { channel } = this.state;\n    channel.push('shout', {name: this.props.usernumber + \" is \" + this.state.current})\n  }\n\n  joinRoom(data) {\n    const { socket } = this.state;\n    this.setState({data})\n    this.setState({current: data})\n    const channel = socket.channel(`water_cooler:${data}`);\n    this.setState({channel: channel})\n    socket.connect();\n    channel.join()\n    .receive(\"ok\", resp => {\n      console.log(\"Joined successfully\" + this.props.usernumber, resp)\n    })\n    .receive(\"error\", resp => { console.log(\"Unable to join\", this.props.usernumber) })\n\n    channel.on(`room:${data}:new_message`, payload => {\n        if (payload.name !== this.props.usernumber + \" is \" + this.state.current){\n          console.log(payload)\n          console.log(\"user \"+ this.props.usernumber + \" got the message\")\n        }\n\n    })\n\n    channel.on('presence_state', presenceState => this.setState({presenceState}))\n\n\n    //channel.push('users', {})\n  }\n\n  componentDidMount() {\n    const socket = new Socket(\"ws://127.0.0.1:4000/socket\", {\n    params: {user_id: `user #${this.props.usernumber}`}\n    });\n    this.setState({socket})\n  }\n\n  render() {\n\n    return (\n      <div className=\"User\">\n        <ShowCurrentActivity current={this.state.current}/>\n        <ChooseActivity join={this.joinRoom} message={this.sendMessage}/>\n        <ShowSimilarUsers users={this.state.presenceState}/>\n      </div>\n    );\n  }\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}