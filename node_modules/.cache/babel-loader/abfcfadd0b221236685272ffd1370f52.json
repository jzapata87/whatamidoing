{"ast":null,"code":"var _jsxFileName = \"/Users/javierzapata/Developer/whatamidoing/src/User/User.js\";\nimport React from 'react'; //import ChooseActivity from './ChooseActivity';\n\nimport ShowCurrentActivity from './ShowCurrentActivity';\nimport ShowSimilarUsers from './ShowSimilarUsers';\nimport { Socket, Presence } from 'phoenix-socket';\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      room: \"\",\n      presence: \"\",\n      channel: null,\n      socket: null,\n      presenceState: {}\n    }; // This binding is necessary to make `this` work in the callback\n\n    this.joinRoom = this.joinRoom.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n  }\n\n  sendMessage() {\n    const channel = this.state.channel;\n    channel.push('shout', {\n      name: this.props.usernumber + \" is \" + this.state.data\n    });\n  }\n\n  joinRoom(data) {\n    const socket = this.state.socket;\n    this.setState({\n      data\n    });\n    const channel = socket.channel(\"water_cooler:\".concat(data));\n    this.setState({\n      channel: channel\n    });\n    socket.connect();\n    channel.join().receive(\"ok\", resp => {\n      console.log(\"Joined successfully\" + this.props.usernumber, resp);\n      this.setState({\n        room: data\n      });\n    }).receive(\"error\", resp => {\n      console.log(\"Unable to join\", this.props.usernumber);\n    });\n    channel.on(\"room:\".concat(data, \":new_message\"), payload => {\n      if (payload.name !== this.props.usernumber + \" is here \") {\n        console.log(payload);\n        console.log(\"user \" + this.props.usernumber + \" got the message\");\n      }\n    });\n    channel.on('presence_state', presenceState => this.setState({\n      presenceState\n    })); //channel.push('users', {})\n  }\n\n  componentDidMount() {\n    const socket = new Socket(\"ws://127.0.0.1:4000/socket\", {\n      params: {\n        user_id: \"user #\".concat(this.props.usernumber)\n      }\n    });\n    this.setState({\n      socket\n    });\n  }\n\n  render() {\n    console.log(this.state.presenceState, \"this is important\");\n    return React.createElement(\"div\", {\n      className: \"User\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(ShowCurrentActivity, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"ButtonList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Choose next activity?\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.joinRoom(\"washing\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Wash\"), React.createElement(\"button\", {\n      onClick: () => this.joinRoom(\"dishes\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Dishes\"), React.createElement(\"button\", {\n      onClick: () => this.joinRoom(\"studying\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Study\"), React.createElement(\"button\", {\n      onClick: this.sendMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Send Message\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(ShowSimilarUsers, {\n      users: this.state.presenceState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default User;","map":{"version":3,"sources":["/Users/javierzapata/Developer/whatamidoing/src/User/User.js"],"names":["React","ShowCurrentActivity","ShowSimilarUsers","Socket","Presence","User","Component","constructor","props","state","room","presence","channel","socket","presenceState","joinRoom","bind","sendMessage","push","name","usernumber","data","setState","connect","join","receive","resp","console","log","on","payload","componentDidMount","params","user_id","render"],"mappings":"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","sourcesContent":["import React from 'react';\n//import ChooseActivity from './ChooseActivity';\nimport ShowCurrentActivity from './ShowCurrentActivity';\nimport ShowSimilarUsers from './ShowSimilarUsers';\nimport { Socket, Presence } from 'phoenix-socket';\n\nclass User extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      room: \"\",\n      presence: \"\",\n      channel: null,\n      socket: null,\n      presenceState:{}\n    };\n\n    // This binding is necessary to make `this` work in the callback\n    this.joinRoom = this.joinRoom.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n  }\n\n  sendMessage() {\n    const { channel } = this.state;\n    channel.push('shout', {name: this.props.usernumber + \" is \" + this.state.data})\n  }\n\n  joinRoom(data) {\n    const { socket } = this.state;\n    this.setState({data})\n    const channel = socket.channel(`water_cooler:${data}`);\n    this.setState({channel: channel})\n    socket.connect();\n    channel.join()\n    .receive(\"ok\", resp => {\n      console.log(\"Joined successfully\" + this.props.usernumber, resp)\n      this.setState({room: data})\n    })\n    .receive(\"error\", resp => { console.log(\"Unable to join\", this.props.usernumber) })\n\n    channel.on(`room:${data}:new_message`, payload => {\n        if (payload.name !== this.props.usernumber + \" is here \"){\n          console.log(payload)\n          console.log(\"user \"+ this.props.usernumber + \" got the message\")\n        }\n\n    })\n\n    channel.on('presence_state', presenceState => this.setState({presenceState}))\n\n\n    //channel.push('users', {})\n  }\n\n  componentDidMount() {\n    const socket = new Socket(\"ws://127.0.0.1:4000/socket\", {\n    params: {user_id: `user #${this.props.usernumber}`}\n    });\n    this.setState({socket})\n  }\n\n  render() {\n    console.log(this.state.presenceState, \"this is important\")\n    return (\n      <div className=\"User\">\n        <ShowCurrentActivity/>\n        <div className=\"ButtonList\">\n          Choose next activity?<br/>\n          <button onClick={()=>this.joinRoom(\"washing\")} >\n            Wash\n          </button>\n          <button onClick={()=>this.joinRoom(\"dishes\")} >\n            Dishes\n          </button>\n          <button onClick={()=>this.joinRoom(\"studying\")}>\n            Study\n          </button>\n          <button onClick={this.sendMessage}>\n            Send Message\n          </button>\n          <hr/>\n\n\n        </div>\n        <ShowSimilarUsers users={this.state.presenceState}/>\n\n      </div>\n    );\n  }\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}